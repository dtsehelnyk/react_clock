{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","timer","setInterval","setState","console","log","toLocaleTimeString","prevProps","this","props","timerId","clearInterval","React","Component","App","isVisible","Math","floor","random","changeId","hideTimer","showTimer","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CACZJ,KAAM,IAAIC,OAIZI,QAAQC,KAAI,IAAIL,MAAOM,wBACtB,KAZL,iEAcqBC,GACbC,KAAKC,MAAMC,UAAYH,EAAUG,SAEnCN,QAAQC,IAAR,mCAAwCG,KAAKC,MAAMC,YAjBzD,6CAsBIC,cAAcH,KAAKP,OAGnBG,QAAQC,IAAI,aAzBhB,+BA6BI,OACE,8BACGG,KAAKV,MAAMC,KAAKO,0BA/BzB,GAA2BM,IAAMC,YCEZC,E,4MACnBhB,MAAQ,CACNiB,WAAW,EACXL,QAASM,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG3BC,SAAW,WACT,EAAKhB,SAAS,CACZO,QAASM,KAAKC,MAAsB,IAAhBD,KAAKE,a,EAI7BE,UAAY,WACV,EAAKjB,UAAS,iBACZ,CAAEY,WAAW,O,EAIjBM,UAAY,WACV,EAAKlB,UAAS,iBACZ,CAAEY,WAAW,MAIfX,QAAQC,IAAI,Y,uDAGJ,IAAD,EACwBG,KAAKV,MAA5BY,EADD,EACCA,QAASK,EADV,EACUA,UAEjB,OACE,yBAAKO,UAAU,OACb,uBAAGA,UAAU,mBAAb,WACOZ,IAGP,yBAAKY,UAAU,oBAAf,gBAEG,IACAP,GAAa,kBAAC,EAAD,CAAOL,QAASF,KAAKV,MAAMY,WAG3C,yBAAKY,UAAU,gBACb,4BACEA,UAAU,cACVC,QAASf,KAAKa,UACdG,KAAK,UAHP,SAOC,MACD,4BACEF,UAAU,cACVC,QAASf,KAAKY,UACdI,KAAK,UAHP,QAOC,MACD,4BACEF,UAAU,cACVC,QAASf,KAAKW,SACdK,KAAK,UAHP,uB,GA3DuBZ,IAAMC,WCDvCY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8cd1e983.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  };\n\n  timer = setInterval(() => {\n    this.setState({\n      time: new Date(),\n    });\n\n    // eslint-disable-next-line\n    console.log(new Date().toLocaleTimeString());\n  }, 1000);\n\n  componentDidUpdate(prevProps) {\n    if (this.props.timerId !== prevProps.timerId) {\n      // eslint-disable-next-line\n      console.log(`The timer was renamed to ${this.props.timerId}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n\n    // eslint-disable-next-line\n    console.log('Stopped');\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.time.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  timerId: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nexport default class App extends React.Component {\n  state = {\n    isVisible: true,\n    timerId: Math.floor(Math.random() * 1000),\n  }\n\n  changeId = () => {\n    this.setState({\n      timerId: Math.floor(Math.random() * 1000),\n    });\n  }\n\n  hideTimer = () => {\n    this.setState(() => (\n      { isVisible: false }\n    ));\n  }\n\n  showTimer = () => {\n    this.setState(() => (\n      { isVisible: true }\n    ));\n\n    // eslint-disable-next-line\n    console.log('Started');\n  }\n\n  render() {\n    const { timerId, isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__timer-name\">\n          {`#${timerId}`}\n        </p>\n\n        <div className=\"App__time-string\">\n          Current time:\n          {' '}\n          {isVisible && <Clock timerId={this.state.timerId} />}\n        </div>\n\n        <div className=\"App__buttons\">\n          <button\n            className=\"App__button\"\n            onClick={this.showTimer}\n            type=\"button\"\n          >\n            Start\n          </button>\n          {' / '}\n          <button\n            className=\"App__button\"\n            onClick={this.hideTimer}\n            type=\"button\"\n          >\n            Stop\n          </button>\n          {' / '}\n          <button\n            className=\"App__button\"\n            onClick={this.changeId}\n            type=\"button\"\n          >\n            Change number\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}